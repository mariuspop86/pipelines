name: Run back end tests
on:
  workflow_dispatch:
  repository_dispatch:
    types: [beprems/bo_traitement_agent]

jobs:
  bo_traitement_agent-test-run:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo ${{ github.event.action }}
        uses: actions/checkout@v2
        with:
          repository: ${{ github.event.action }}
          ref: ${{ github.event.client_payload.branch }}
          token: ${{ secrets.GH_PAT }}
#
#      - name: Setup GitHub SSH
#        uses: MrSquaare/ssh-setup-action@v1
#        with:
#          host: github.com
#          private-key: ${{ secrets.SSH_GITHUB_PRIVATE_KEY }}
#          private-key-name: ssh_gitHub
          
      - uses: satackey/action-docker-layer-caching@v0.0.11
        # Ignore the failure of a step and avoid terminating the job.
        continue-on-error: true
        
#      - name: Setup with tools
#        uses: shivammathur/setup-php@v2
#        with:
#          php-version: 7.4
#          extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, dom, filter, gd, iconv, json, mbstring, pdo, bcmath, gettext
#          ssh_key: ${{ secrets.SSH_GITHUB_PRIVATE_KEY }}
#          ssh_key_pub: ${{ secrets.SSH_GITHUB_PUBLIC_KEY }}
#          tools: composer
      
      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          # Use composer.json for key, if composer.lock is not committed.
          # key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-
      
      - name: Install dependencies
        uses: php-actions/composer@v6
        with:
          php_version: "7.4"
          ssh_key: ${{ secrets.SSH_GITHUB_PRIVATE_KEY }}
          ssh_key_pub: ${{ secrets.SSH_GITHUB_PUBLIC_KEY }}

#      - name: Install dependencies
#        run: composer install --prefer-dist --no-progress --no-suggest

      - name: Build and start containers
        run: docker-compose -f "docker-compose-test.yaml" up -d --build

      - name: Generate Keys
        shell: 'script --return --quiet --command "bash {0}"'
        run: docker-compose exec app bin/console lexik:jwt:generate-keypair --skip-if-exists

      - name: run test
        shell: 'script --return --quiet --command "bash {0}"' # hack to see the tty
        run: docker-compose exec app php bin/phpunit

      - name: Stop containers
        if: always()
        run: docker-compose -f "docker-compose-test.yaml" down
